



ВОПРОС НОМЕР 1 -->     Как отказаться от изменений в файле (файлах) находящийся в рабочем каталоге (work directory)?


ОТВЕТ: Для того чтобы отказаться от изменений в нашем файле, мы можем использовать команду
 - git checkout . (Также можем использовать данную команду не с точкой а с именем файла) 
Эта команда вернет все в первоначальное состояние убрав последние изменения
полностью.

______________________________________

ВОПРОС НОМЕР 2 -->    Как вернуть файл из индекса в рабочий каталог?


ОТВЕТ:   Команда git restore --staged поможет вернуть файл из индекса обратно в рабочий каталог. Так же можем использовать команду git reset (она более старая, но также используемая) 

______________________________________

ВОПРОС НОМЕР 3 -->  Как отменить ошибочный commit ?


ОТВЕТ: Если мы хотим полностью удалить последний коммит, включая все изменения файлов данного коммита, то используем команду:

git reset --hard HEAD~1

_____________________________________

ВОПРОС НОМЕР 4 -->  Как создать новую ветку и переключится в нее?


ОТВЕТ:  Создать новую ветку можно с помощью команды git branch <название ветки>.

_____________________________________

ВОПРОС НОМЕР 5 -->   В чем отличение между fast-forward merge  and non fast-forfard merge?



ОТВЕТ: Отличие заключается в том что без fast-forward merge мы создаем новый коммит слияния в активную ветку, а с fast-forward не создается

новый коммит а сливается просто в текущую ветку.


ВОПРОС НОМЕР 6 -->   Когда может возникнуть конфликт слияния веток, как  его разрешить?



ОТВЕТ: Конфликт возникает, когда в двух ветках была изменена одна и та же строка в файле или когда некий файл удален в одной ветке и отредактирован в другой. Как правило, конфликты возникают при работе в команде.
Разрешить можно локально в командной строке 


ВОПРОС НОМЕР 7 -->   Можно ли удалить ветку? Как? 



ОТВЕТ: Очевидно что можно, при использовании команды git branch удаляем локальную ветку ! Также используем флаг -d так называемый --delete 






